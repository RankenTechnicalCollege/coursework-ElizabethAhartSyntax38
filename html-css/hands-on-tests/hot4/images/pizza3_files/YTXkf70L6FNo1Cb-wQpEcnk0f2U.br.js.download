"use strict";var ACF;(function(n){var t;(function(t){var i;(function(t){class i extends HTMLElement{constructor(n,t){super();this.eventListenerAbortController=null;this.loggingValues=null;this.myType=null;this.componentsToWaitFor=[];this.myType=n;this.componentsToWaitFor=[...t]}async connectedCallback(){if(this.eventListenerAbortController=new AbortController,document.readyState!=="loading"){await this.baseInit();return}document.addEventListener("readystatechange",n=>{const t=async()=>{n.target!==null&&n.target!==undefined&&n.target instanceof Document&&n.target.readyState!=="loading"&&await this.baseInit()};t().catch(()=>{})},{signal:this.eventListenerAbortController.signal,once:!0})}disconnectedCallback(){this.eventListenerAbortController!==null&&this.eventListenerAbortController!==undefined&&(this.eventListenerAbortController.abort(),this.eventListenerAbortController=null);this.dispose()}async baseInit(){if(n.Common.Utils.LoggingUtils.logFilterFlare(["acfbaseinitff"]),this.eventListenerAbortController===null)throw new n.Common.Utils.ErrorUtils.AcfError(this.tagName,"Did not find abort controller");const t=this.getAttribute("data-appns");if(t===null||t===undefined||t==="")throw new n.Common.Utils.ErrorUtils.AcfError(this.tagName,"Did not find data-appns");const i=this.getAttribute("data-kvalue");if(i===null||i===undefined||i==="")throw new n.Common.Utils.ErrorUtils.AcfError(this.tagName,"Did not find data-kvalue");this.loggingValues={appNS:t,kValue:i};await Promise.all(this.componentsToWaitFor.map(t=>n.Common.Utils.LoggingUtils.waitForComponent(t)));await this.init();n.Common.Utils.LoggingUtils.log({eventType:"Show",controlTagName:this.tagName,eventDescription:"Connected",loggingValues:this.loggingValues,data:{}});n.Common.Utils.LoggingUtils.logFilterFlare(["acfshowff"]);this.addEventListener("pointerenter",()=>this.handlePointerEnter(),{signal:this.eventListenerAbortController.signal});this.setAttribute("data-is-ready","");this.componentDidInit(this.myType)}handlePointerEnter(){n.Common.Utils.LoggingUtils.log({eventType:"Hover",controlTagName:this.tagName,eventDescription:"Hover",loggingValues:this.loggingValues,data:{}})}get isDarkMode(){return this.hasAttribute("data-dark-mode")}get isRtl(){return window.getComputedStyle(this).direction==="rtl"}get userLocale(){const n=this.getAttribute("data-locale");return n===null||n===undefined||n===""?Intl.DateTimeFormat().resolvedOptions().locale:n}componentDidInit(n){n!==null&&sj_evt.fire(`ACF.Component.${n}.DidInit`)}}t.AcfBaseElement=i})(i=t.AcfBase||(t.AcfBase={}))})(t=n.Common||(n.Common={}))})(ACF||(ACF={}))